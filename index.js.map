{"version":3,"file":"index.js","sources":["../src/assets/img/sprite.svg","../src/ts/menu.tsx","../src/ts/main.tsx"],"sourcesContent":["export default \"__VITE_ASSET__NKSZpSDR__\"","import React from 'react'\r\nimport sprite from '../assets/img/sprite.svg'\r\nimport { HandleClick } from './main'\r\n\r\n\r\ntype MenuProps = {\r\n    isXSelected: boolean\r\n    onClick: (param: HandleClick) => void\r\n}\r\n\r\nexport function Menu(props: MenuProps): React.ReactNode {\r\n        return (\r\n            <div className='menu-container'>\r\n                <Logo />\r\n                <MarkSelector\r\n                    isXSelected={props.isXSelected}\r\n                    onClick = {(i) => {props.onClick(i)}}\r\n                />\r\n                <EnemySelector />\r\n            </div>\r\n        )\r\n}\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo-container\">\r\n            <svg width='72' height='32'>\r\n                <use href={ `${sprite}#logo` } />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MarkSelector(props: MenuProps) {\r\n    const xSelected = props.isXSelected ? ' mark-selector__btn_selected' : ''\r\n    const oSelected = props.isXSelected ? '' : ' mark-selector__btn_selected'\r\n    console.log(xSelected, oSelected)\r\n\r\n    return (\r\n        <div className=\"mark-selector__container\">\r\n            <h2 className=\"mark-selector__title\">pick players 1's mark</h2>\r\n            <input type=\"checkbox\" className=\"mark-selector__checkbox visually-hidden\" id='mark-selector'/>\r\n            <label className=\"mark-selector__label\" htmlFor='mark-selector'>\r\n                <div className=\"mark-selector__selected-div\"></div>\r\n                <svg className='mark-selector__x-icon' width='32' height='32'>\r\n                    <use href={`${sprite}#icon-x`}></use>\r\n                </svg>\r\n                <svg className='mark-selector__o-icon' width='32' height='32'>\r\n                    <use href={`${sprite}#icon-o`}></use>\r\n                </svg>\r\n            </label>\r\n            <p className=\"mark-selector__notice\">remember: x goes firt</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EnemySelector() {\r\n    return (\r\n        <div className=\"enemy-selector__container\">\r\n            <button className=\"enemy-selector__cpu-btn\" type='button'>new game (vs cpu)</button>\r\n            <button className=\"enemy-selector__multiplayer-btn\" type='button'>new game (vs player)</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport '../styles/index.scss'\nimport { Menu } from './menu'\n\n\ntype GameProps = {\n\n}\ntype State = {\n    isXSelected: boolean\n    isStarted: boolean\n    isMultiplayer: boolean\n}\nexport type HandleClick = {\n    selectedMark?: string\n}\n\nexport class Game extends React.Component<GameProps, State> {\n    state: State\n    constructor(props: GameProps) {\n        super(props)\n        this.state = {\n            isXSelected: true,\n            isStarted: false,\n            isMultiplayer: false\n        }\n    }\n\n    handleClick(i:HandleClick): void {\n        console.log(i)\n        if (i.selectedMark === \"x\") {\n            this.setState({\n                isXSelected: true\n            }) \n        } else if (i.selectedMark === \"o\") {\n            this.setState({\n                isXSelected: false\n            })\n        }\n        console.log(this.state)\n    }\n\n    render(): React.ReactNode | null {\n        if (!this.state.isStarted) {\n            return (\n                <Menu\n                    isXSelected={this.state.isXSelected}\n                    onClick={(i) => { this.handleClick(i) }}\n                />\n            )\n        }\n        return null\n    }\n}\n\n\nconst root = ReactDOM.createRoot(document.querySelector('.game')!)\nroot.render(<Game />)\n"],"names":["sprite","Menu","props","jsxs","jsx","Logo","MarkSelector","i","EnemySelector","xSelected","oSelected","Game","React","__publicField","root","ReactDOM"],"mappings":"46BAAA,MAAeA,EAAA,iDCUR,SAASC,EAAKC,EAAmC,CAE5C,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,iBACX,SAAA,CAAAC,EAAA,IAACC,EAAK,EAAA,EACND,EAAA,IAACE,EAAA,CACG,YAAaJ,EAAM,YACnB,QAAYK,GAAM,CAACL,EAAM,QAAQK,CAAC,CAAC,CAAA,CACvC,QACCC,EAAc,EAAA,CACnB,CAAA,CAAA,CAEZ,CAEA,SAASH,GAAO,CACZ,aACK,MAAI,CAAA,UAAU,iBACX,SAAAD,EAAAA,IAAC,OAAI,MAAM,KAAK,OAAO,KACnB,eAAC,MAAI,CAAA,KAAO,GAAGJ,CAAM,OAAA,CAAU,CACnC,CAAA,CACJ,CAAA,CAER,CAEA,SAASM,EAAaJ,EAAkB,CAC9B,MAAAO,EAAYP,EAAM,YAAc,+BAAiC,GACjEQ,EAAYR,EAAM,YAAc,GAAK,+BACnC,eAAA,IAAIO,EAAWC,CAAS,EAG5BP,EAAA,KAAC,MAAI,CAAA,UAAU,2BACX,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,uBAAuB,SAAqB,wBAAA,QACzD,QAAM,CAAA,KAAK,WAAW,UAAU,0CAA0C,GAAG,gBAAe,EAC5FD,EAAA,KAAA,QAAA,CAAM,UAAU,uBAAuB,QAAQ,gBAC5C,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,6BAA8B,CAAA,EAC5CA,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,MAAM,KAAK,OAAO,KACrD,SAAAA,MAAC,MAAI,CAAA,KAAM,GAAGJ,CAAM,SAAW,CAAA,EACnC,EACCI,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,MAAM,KAAK,OAAO,KACrD,SAAAA,MAAC,MAAI,CAAA,KAAM,GAAGJ,CAAM,SAAW,CAAA,EACnC,CAAA,EACJ,EACCI,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAqB,wBAAA,CAC9D,CAAA,CAAA,CAER,CAEA,SAASI,GAAgB,CAEjB,OAAAL,EAAA,KAAC,MAAI,CAAA,UAAU,4BACX,SAAA,CAAAC,MAAC,SAAO,CAAA,UAAU,0BAA0B,KAAK,SAAS,SAAiB,oBAAA,QAC1E,SAAO,CAAA,UAAU,kCAAkC,KAAK,SAAS,SAAoB,uBAAA,CAC1F,CAAA,CAAA,CAER,CC7Ca,MAAAO,UAAaC,EAAM,SAA4B,CAExD,YAAYV,EAAkB,CAC1B,MAAMA,CAAK,EAFfW,EAAA,cAGI,KAAK,MAAQ,CACT,YAAa,GACb,UAAW,GACX,cAAe,EAAA,CAEvB,CAEA,YAAYN,EAAqB,CAC7B,QAAQ,IAAIA,CAAC,EACTA,EAAE,eAAiB,IACnB,KAAK,SAAS,CACV,YAAa,EAAA,CAChB,EACMA,EAAE,eAAiB,KAC1B,KAAK,SAAS,CACV,YAAa,EAAA,CAChB,EAEG,QAAA,IAAI,KAAK,KAAK,CAC1B,CAEA,QAAiC,CACzB,OAAC,KAAK,MAAM,UAQT,KANCH,EAAA,IAACH,EAAA,CACG,YAAa,KAAK,MAAM,YACxB,QAAUM,GAAM,CAAE,KAAK,YAAYA,CAAC,CAAE,CAAA,CAAA,CAKtD,CACJ,CAGA,MAAMO,EAAOC,EAAS,WAAW,SAAS,cAAc,OAAO,CAAE,EACjED,EAAK,OAAQV,EAAAA,IAAAO,EAAA,CAAK,CAAA,CAAE"}